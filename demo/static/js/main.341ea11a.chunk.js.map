{"version":3,"sources":["flux/dispatcher.js","flux/storage.js","flux/actionNames.js","flux/store.js","flux/actions.js","components/AddTodo.js","components/TodoList.js","components/Controls.js","components/App.js","index.js"],"names":["dispatcher","Dispatcher","storage","read","data","localStorage","todos","JSON","parse","write","stringify","readTab","tab","writeTab","actionNames","ADD_TODO","REMOVE_TODO","TOGGLE_TODO","SWITCH_TAB","CLEAR_COMPLETED","store","Store","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","filter","_ref","completed","count","length","text","push","id","Date","now","emit","idToRemove","_ref2","idToToggle","todo","find","_ref3","_ref4","action","type","addTodo","removeTodo","toggleTodo","switchTab","clearCompleted","events","EventEmitter","register","handleActions","bind","actions","dispatch","AddTodo","handleChange","event","val","target","value","setState","handleSubmit","_","state","trim","props","input","current","focus","React","createRef","react_default","a","createElement","Form","onSubmit","Input","onChange","ref","Button","content","basic","fluid","Component","TodoList","handleButtonClick","handleCheckboxChange","_this2","items","List","celled","map","Item","className","key","Checkbox","checked","onClick","compact","Controls","handleItemClick","name","_this$props","menuItems","menuIndex","findIndex","Label","Menu","activeIndex","onItemClick","secondary","App","update","getState","addListener","_this$state","Segment","Group","components_AddTodo","handleAddTodo","components_TodoList","handleRemoveTodo","handleToggleTodo","components_Controls","handleSwitchTab","handleClearCompleted","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.341ea11a.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","let storage = {\n\tread() {\n\t\tlet data = localStorage.todos;\n\t\treturn (data && JSON.parse(data)) || [];\n\t},\n\n\twrite(todos) {\n\t\tlocalStorage.todos = JSON.stringify(todos);\n\t},\n\n\treadTab() {\n\t\tlet data = localStorage.tab;\n\t\treturn (data && JSON.parse(data)) || \"\";\n\t},\n\n\twriteTab(tab) {\n\t\tlocalStorage.tab = JSON.stringify(tab);\n\t},\n};\n\nexport default storage;\n","const actionNames = {\n\tADD_TODO: \"ADD_TODO\",\n\tREMOVE_TODO: \"REMOVE_TODO\",\n\tTOGGLE_TODO: \"TOGGLE_TODO\",\n\tSWITCH_TAB: \"SWITCH_TAB\",\n\tCLEAR_COMPLETED: \"CLEAR_COMPLETED\",\n};\n\nexport default actionNames;\n","import events from \"events\";\nimport dispatcher from \"./dispatcher\";\nimport storage from \"./storage\";\nimport actionNames from \"./actionNames\";\n\nclass Store extends events.EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.todos = storage.read();\n\t\tthis.tab = storage.readTab();\n\t}\n\n\tgetState() {\n\t\tlet tab = this.tab;\n\t\tlet todos = this.todos.filter(({ completed }) => {\n\t\t\tswitch (tab) {\n\t\t\t\tcase \"ALL\":\n\t\t\t\t\treturn true;\n\t\t\t\tcase \"ACTIVE\":\n\t\t\t\t\treturn !completed;\n\t\t\t\tcase \"COMPLETED\":\n\t\t\t\t\treturn completed;\n\t\t\t}\n\t\t});\n\t\treturn { todos, tab, count: this.todos.length };\n\t}\n\n\taddTodo(text) {\n\t\tthis.todos.push({\n\t\t\tid: Date.now(),\n\t\t\ttext,\n\t\t\tcompleted: false,\n\t\t});\n\n\t\tstorage.write(this.todos);\n\t\tthis.emit(\"change\");\n\t}\n\n\tremoveTodo(idToRemove) {\n\t\tthis.todos = this.todos.filter(({ id }) => id !== idToRemove);\n\n\t\tstorage.write(this.todos);\n\t\tthis.emit(\"change\");\n\t}\n\n\ttoggleTodo(idToToggle) {\n\t\tlet todo = this.todos.find(({ id }) => id === idToToggle);\n\t\ttodo.completed = !todo.completed;\n\n\t\tstorage.write(this.todos);\n\t\tthis.emit(\"change\");\n\t}\n\n\tswitchTab(tab) {\n\t\tthis.tab = tab;\n\n\t\tstorage.writeTab(tab);\n\t\tthis.emit(\"change\");\n\t}\n\n\tclearCompleted() {\n\t\tthis.todos = this.todos.filter(({ completed }) => !completed);\n\n\t\tstorage.write(this.todos);\n\t\tthis.emit(\"change\");\n\t}\n\n\thandleActions(action) {\n\t\tswitch (action.type) {\n\t\t\tcase actionNames.ADD_TODO:\n\t\t\t\tthis.addTodo(action.text);\n\t\t\t\tbreak;\n\t\t\tcase actionNames.REMOVE_TODO:\n\t\t\t\tthis.removeTodo(action.id);\n\t\t\t\tbreak;\n\t\t\tcase actionNames.TOGGLE_TODO:\n\t\t\t\tthis.toggleTodo(action.id);\n\t\t\t\tbreak;\n\t\t\tcase actionNames.SWITCH_TAB:\n\t\t\t\tthis.switchTab(action.tab);\n\t\t\t\tbreak;\n\t\t\tcase actionNames.CLEAR_COMPLETED:\n\t\t\t\tthis.clearCompleted();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nlet store = new Store();\n\ndispatcher.register(store.handleActions.bind(store));\n\nexport default store;\n","import dispatcher from \"./dispatcher\";\nimport actionNames from \"./actionNames\";\n\nlet actions = {\n\taddTodo(text) {\n\t\tdispatcher.dispatch({\n\t\t\ttype: actionNames.ADD_TODO,\n\t\t\ttext,\n\t\t});\n\t},\n\n\tremoveTodo(id) {\n\t\tdispatcher.dispatch({\n\t\t\ttype: actionNames.REMOVE_TODO,\n\t\t\tid,\n\t\t});\n\t},\n\n\ttoggleTodo(id) {\n\t\tdispatcher.dispatch({\n\t\t\ttype: actionNames.TOGGLE_TODO,\n\t\t\tid,\n\t\t});\n\t},\n\n\tswitchTab(tab) {\n\t\tdispatcher.dispatch({\n\t\t\ttype: actionNames.SWITCH_TAB,\n\t\t\ttab,\n\t\t});\n\t},\n\n\tclearCompleted() {\n\t\tdispatcher.dispatch({\n\t\t\ttype: actionNames.CLEAR_COMPLETED,\n\t\t});\n\t},\n};\n\nexport default actions;\n","import React, { Component } from \"react\";\nimport { Form, Button, Input } from \"semantic-ui-react\";\n\nclass AddTodo extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { val: \"\" };\n\t\tthis.input = React.createRef();\n\t}\n\n\thandleChange = event => {\n\t\tlet val = event.target.value;\n\t\tthis.setState({ val });\n\t};\n\n\thandleSubmit = _ => {\n\t\tlet val = this.state.val.trim();\n\t\tif (!val) return;\n\n\t\tthis.props.addTodo(val);\n\t\tthis.setState({ val: \"\" });\n\n\t\tthis.input.current.focus();\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Form onSubmit={this.handleSubmit}>\n\t\t\t\t<Input\n\t\t\t\t\tvalue={this.state.val}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tref={this.input}\n\t\t\t\t\taction={<Button content=\"add\" basic />}\n\t\t\t\t\tfluid\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t);\n\t}\n}\n\nexport default AddTodo;\n","import React, { Component } from \"react\";\nimport { List, Checkbox, Button } from \"semantic-ui-react\";\n\nclass TodoList extends Component {\n\thandleButtonClick = (_, { id }) => {\n\t\tthis.props.removeTodo(id);\n\t};\n\n\thandleCheckboxChange = (_, { id }) => {\n\t\tthis.props.toggleTodo(id);\n\t};\n\n\trender() {\n\t\tlet todos = this.props.items;\n\n\t\treturn (\n\t\t\t<List celled>\n\t\t\t\t{todos.map(({ id, text, completed }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\tclassName={completed ? \"completed\" : \"\"}\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t\t\t\tonChange={this.handleCheckboxChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p>{text}</p>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\tonClick={this.handleButtonClick}\n\t\t\t\t\t\t\t\tcontent=\"del\"\n\t\t\t\t\t\t\t\tbasic\n\t\t\t\t\t\t\t\tcompact\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t);\n\t}\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport { Label, Menu, Button } from \"semantic-ui-react\";\n\nclass Controls extends Component {\n\thandleItemClick = (_, { name }) => {\n\t\tthis.props.switchTab(name);\n\t};\n\n\trender() {\n\t\tlet { tab, count, clearCompleted } = this.props;\n\n\t\tlet menuItems = [\n\t\t\t{\n\t\t\t\tname: \"ALL\",\n\t\t\t\tkey: \"ALL\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"ACTIVE\",\n\t\t\t\tkey: \"ACTIVE\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"COMPLETED\",\n\t\t\t\tkey: \"COMPLETED\",\n\t\t\t},\n\t\t];\n\n\t\tlet menuIndex = menuItems.findIndex(({ name }) => name === tab);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Label basic>\n\t\t\t\t\t{count} item\n\t\t\t\t\t{count > 1 && \"s\"}\n\t\t\t\t</Label>\n\t\t\t\t<Menu\n\t\t\t\t\titems={menuItems}\n\t\t\t\t\tactiveIndex={menuIndex}\n\t\t\t\t\tonItemClick={this.handleItemClick}\n\t\t\t\t\tsecondary\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={clearCompleted}\n\t\t\t\t\tcontent=\"clear\"\n\t\t\t\t\tbasic\n\t\t\t\t\tcompact\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport store from \"../flux/store\";\nimport actions from \"../flux/actions\";\n\nimport AddTodo from \"./AddTodo\";\nimport TodoList from \"./TodoList\";\nimport Controls from \"./Controls\";\nimport { Segment } from \"semantic-ui-react\";\n\nimport \"./main.scss\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = store.getState();\n\t}\n\n\tcomponentDidMount() {\n\t\tstore.addListener(\"change\", this.update);\n\t}\n\n\tupdate = _ => {\n\t\tthis.setState(store.getState());\n\t};\n\n\thandleAddTodo(val) {\n\t\tactions.addTodo(val);\n\t}\n\n\thandleRemoveTodo(id) {\n\t\tactions.removeTodo(id);\n\t}\n\n\thandleToggleTodo(id) {\n\t\tactions.toggleTodo(id);\n\t}\n\n\thandleSwitchTab(tab) {\n\t\tactions.switchTab(tab);\n\t}\n\n\thandleClearCompleted() {\n\t\tactions.clearCompleted();\n\t}\n\n\trender() {\n\t\tlet { todos, tab, count } = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Segment.Group>\n\t\t\t\t\t<Segment className=\"seg-add\">\n\t\t\t\t\t\t<AddTodo addTodo={this.handleAddTodo} />\n\t\t\t\t\t</Segment>\n\n\t\t\t\t\t{!!todos.length && (\n\t\t\t\t\t\t<Segment className=\"seg-list\">\n\t\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\t\titems={todos}\n\t\t\t\t\t\t\t\tremoveTodo={this.handleRemoveTodo}\n\t\t\t\t\t\t\t\ttoggleTodo={this.handleToggleTodo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!!count && (\n\t\t\t\t\t\t<Segment className=\"seg-controls\">\n\t\t\t\t\t\t\t<Controls\n\t\t\t\t\t\t\t\ttab={tab}\n\t\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t\t\tswitchTab={this.handleSwitchTab}\n\t\t\t\t\t\t\t\tclearCompleted={this.handleClearCompleted}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Segment>\n\t\t\t\t\t)}\n\t\t\t\t</Segment.Group>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}